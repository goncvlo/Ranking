general:
  seed: 42
data_loader:
  path: "../data/ml-100k"
  sub_paths: ["data", "user", "item"]
data_preparation:
  rating_conversion:
    1: [1, 2, 3]
    2: [4]
    3: [5]
  rating_flag:
    negative: [1]
    positive: [2, 3]
optimization:
  leave_last_k: 5
  n_trials: 10

  retrieval:
    scoring_metric: "rmse"
    SVD:
      fixed:
        random_state: 42
        biased: True
        init_mean: 0
        init_std_dev: 0.1
        verbose: False
      tunable:
        n_factors: [50, 150]
        n_epochs: [15, 25]
        lr_bu: [0.001, 0.5]
        lr_bi: [0.001, 0.5]
        lr_pu: [0.001, 0.5]
        lr_qi: [0.001, 0.5]
        reg_bu: [0.01, 0.5]
        reg_bi: [0.01, 0.5]
        reg_pu: [0.01, 0.5]
        reg_qi: [0.01, 0.5]
      float_params: ["lr_bu", "lr_bi", "lr_pu", "lr_qi", "reg_bu", "reg_bi", "reg_pu", "reg_qi"]
      categ_params: []

    CoClustering:
      fixed:
        random_state: 42
        verbose: False
      tunable:
        n_cltr_u: [3, 9]
        n_cltr_i: [3, 9]
        n_epochs: [15, 25]
      float_params: []
      categ_params: []

    KNNWithMeans:
      fixed:
        verbose: False
        user_based: True
      tunable:
        name: ["msd", "cosine", "pearson"]
        min_support: [3, 10]
        k: [10, 100]
        min_k: [1, 20]
      float_params: []
      categ_params: ["name"]

  ranker:
    scoring_metric: "ndcg"
    XGBRanker:
      fixed:
        booster: "gbtree"
        objective: "rank:pairwise"
        eval_metric: "ndcg"
        random_state: 42
        verbosity: 0
      tunable:
        learning_rate: [0.001, 0.5]
        gamma: [0, 10]
        max_depth: [3, 15]
        subsample: [0.5, 1]
        n_estimators: [50, 400]
      float_params: ["learning_rate", "gamma", "subsample"]
      categ_params: []

    LGBMRanker:
      fixed:
        objective: "lambdarank"
        eval_metric: "ndcg"
        boosting_type: "gbdt"
        random_state: 42
      tunable:
        learning_rate: [0.001, 0.5]
        num_leaves: [15, 255]
        max_depth: [3, 15]
        subsample: [0.5, 1]
        n_estimators: [50, 400]
        min_child_samples: [5, 50]
      float_params: ["learning_rate", "subsample"]
      categ_params: []
